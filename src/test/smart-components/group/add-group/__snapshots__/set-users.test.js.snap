// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<SetUsers /> should render correctly 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <MemoryRouter
    initialEntries={
      Array [
        "/groups/",
        "/groups/add-group/",
        "/groups/",
      ]
    }
    initialIndex={1}
  >
    <Router
      history={
        Object {
          "action": "POP",
          "block": [Function],
          "canGo": [Function],
          "createHref": [Function],
          "entries": Array [
            Object {
              "hash": "",
              "key": "fjmsft",
              "pathname": "/groups/",
              "search": "",
              "state": undefined,
            },
            Object {
              "hash": "",
              "key": "fkl9gf",
              "pathname": "/groups/add-group/",
              "search": "",
              "state": undefined,
            },
            Object {
              "hash": "",
              "key": "5kmz8v",
              "pathname": "/groups/",
              "search": "",
              "state": undefined,
            },
          ],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "index": 1,
          "length": 3,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "key": "fkl9gf",
            "pathname": "/groups/add-group/",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        }
      }
    >
      <SetUsers
        createOption={[MockFunction]}
        optionIdx={0}
        selectedUsers={Array []}
        setGroupData={[MockFunction]}
        setOptionIdx={[MockFunction]}
        setSelectedUsers={[MockFunction]}
      >
        <Form>
          <form
            className="pf-c-form"
            noValidate={true}
          >
            <Stack
              gutter="md"
            >
              <div
                className="pf-l-stack pf-m-gutter"
              >
                <StackItem>
                  <div
                    className="pf-l-stack__item"
                  >
                    <TextContent>
                      <div
                        className="pf-c-content"
                      >
                        <Text
                          component="h6"
                        >
                          <h6
                            className=""
                            data-pf-content={true}
                          >
                            Select users from your organization to add to this group.
                          </h6>
                        </Text>
                      </div>
                    </TextContent>
                  </div>
                </StackItem>
                <StackItem>
                  <div
                    className="pf-l-stack__item"
                  >
                    <FormGroup
                      fieldId="select-user"
                    >
                      <div
                        className="pf-c-form__group"
                      >
                        <Card>
                          <article
                            className="pf-c-card"
                          >
                            <Connect(UsersList)
                              selectedUsers={Array []}
                              setSelectedUsers={[MockFunction]}
                            >
                              <UsersList
                                addNotification={[Function]}
                                fetchUsers={[Function]}
                                isLoading={false}
                                pagination={
                                  Object {
                                    "itemCount": 1,
                                    "limit": 5,
                                    "numberOfItems": 5,
                                    "offset": 0,
                                  }
                                }
                                selectedUsers={Array []}
                                setSelectedUsers={[MockFunction]}
                                users={Array []}
                              >
                                <TableToolbarView
                                  borders={false}
                                  checkedRows={Array []}
                                  columns={
                                    Array [
                                      Object {
                                        "orderBy": "name",
                                        "title": "User name",
                                      },
                                      Object {
                                        "title": "Email",
                                      },
                                      Object {
                                        "title": "First name",
                                      },
                                      Object {
                                        "title": "Last name",
                                      },
                                    ]
                                  }
                                  createRows={[Function]}
                                  data={Array []}
                                  fetchData={[Function]}
                                  filterValue=""
                                  isCompact={true}
                                  isLoading={false}
                                  isSelectable={true}
                                  pagination={
                                    Object {
                                      "itemCount": 1,
                                      "limit": 5,
                                      "numberOfItems": 5,
                                      "offset": 0,
                                    }
                                  }
                                  request={[Function]}
                                  requests={Array []}
                                  routes={[Function]}
                                  setCheckedItems={[Function]}
                                  setFilterValue={[Function]}
                                  titlePlural="users"
                                  titleSingular="user"
                                  toolbarButtons={[Function]}
                                >
                                  <EmptyWithFilter
                                    description={
                                      Array [
                                        "To configure user access to applicastions",
                                        "create at least one user",
                                      ]
                                    }
                                    icon={[Function]}
                                    title="Configure users"
                                  >
                                    <Bullseye>
                                      <div
                                        className="pf-l-bullseye"
                                      >
                                        <EmptyState
                                          variant="full"
                                        >
                                          <div
                                            className="pf-c-empty-state"
                                          >
                                            <EmptyStateIcon
                                              icon={[Function]}
                                            >
                                              <UsersIcon
                                                aria-hidden="true"
                                                className="pf-c-empty-state__icon"
                                                color="currentColor"
                                                noVerticalAlign={false}
                                                size="sm"
                                                title={null}
                                              >
                                                <svg
                                                  aria-hidden="true"
                                                  aria-labelledby={null}
                                                  className="pf-c-empty-state__icon"
                                                  fill="currentColor"
                                                  height="1em"
                                                  role="img"
                                                  style={
                                                    Object {
                                                      "verticalAlign": "-0.125em",
                                                    }
                                                  }
                                                  viewBox="0 0 640 512"
                                                  width="1em"
                                                >
                                                  <path
                                                    d="M96 224c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm448 0c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm32 32h-64c-17.6 0-33.5 7.1-45.1 18.6 40.3 22.1 68.9 62 75.1 109.4h66c17.7 0 32-14.3 32-32v-32c0-35.3-28.7-64-64-64zm-256 0c61.9 0 112-50.1 112-112S381.9 32 320 32 208 82.1 208 144s50.1 112 112 112zm76.8 32h-8.3c-20.8 10-43.9 16-68.5 16s-47.6-6-68.5-16h-8.3C179.6 288 128 339.6 128 403.2V432c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48v-28.8c0-63.6-51.6-115.2-115.2-115.2zm-223.7-13.4C161.5 263.1 145.6 256 128 256H64c-35.3 0-64 28.7-64 64v32c0 17.7 14.3 32 32 32h65.9c6.3-47.4 34.9-87.3 75.2-109.4z"
                                                    transform=""
                                                  />
                                                </svg>
                                              </UsersIcon>
                                            </EmptyStateIcon>
                                            <Title
                                              headingLevel="h5"
                                              size="lg"
                                            >
                                              <h5
                                                className="pf-c-title pf-m-lg"
                                              >
                                                Configure users
                                              </h5>
                                            </Title>
                                            <EmptyStateBody>
                                              <div
                                                className="pf-c-empty-state__body"
                                              >
                                                To configure user access to applicastions
                                                 
                                                <br />
                                                create at least one user
                                                 
                                                <br />
                                              </div>
                                            </EmptyStateBody>
                                          </div>
                                        </EmptyState>
                                      </div>
                                    </Bullseye>
                                  </EmptyWithFilter>
                                </TableToolbarView>
                              </UsersList>
                            </Connect(UsersList)>
                          </article>
                        </Card>
                      </div>
                    </FormGroup>
                  </div>
                </StackItem>
              </div>
            </Stack>
          </form>
        </Form>
      </SetUsers>
    </Router>
  </MemoryRouter>
</Provider>
`;
