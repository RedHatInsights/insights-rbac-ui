// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<GroupPrincipals /> should render correctly 1`] = `
<ContextProvider
  value={null}
>
  <GroupRoles
    addNotification={[Function]}
    addRoles={[Function]}
    disableAddRoles={true}
    fetchAddRolesForGroup={[Function]}
    fetchRoles={[Function]}
    fetchRolesForGroup={[Function]}
    isChanged={true}
    isLoading={true}
    pagination={
      Object {
        "count": undefined,
        "itemCount": 1,
        "limit": 50,
        "numberOfItems": 50,
        "offset": 0,
      }
    }
    removeRoles={[Function]}
    roles={Array []}
    selectedRoles={Array []}
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    userIdentity={Object {}}
  />
</ContextProvider>
`;

exports[`<GroupPrincipals /> should render correctly in loading state 1`] = `
<ContextProvider
  value={null}
>
  <GroupRoles
    addNotification={[Function]}
    addRoles={[Function]}
    disableAddRoles={true}
    fetchAddRolesForGroup={[Function]}
    fetchRoles={[Function]}
    fetchRolesForGroup={[Function]}
    isChanged={true}
    isLoading={true}
    pagination={
      Object {
        "count": undefined,
        "itemCount": 1,
        "limit": 50,
        "numberOfItems": 50,
        "offset": 0,
      }
    }
    removeRoles={[Function]}
    roles={Array []}
    selectedRoles={Array []}
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
    userIdentity={Object {}}
  />
</ContextProvider>
`;
