// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Groups /> should render correctly 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Subscription {
        "handleChangeWrapper": [Function],
        "listeners": Object {
          "notify": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": null,
      },
    }
  }
>
  <Groups
    groups={Array []}
    pagination={
      Object {
        "count": 1,
        "itemCount": 1,
        "limit": 50,
        "numberOfItems": 50,
        "offset": 0,
      }
    }
    userIdentity={Object {}}
  />
</ContextProvider>
`;

exports[`<Groups /> should render correctly in loading state 1`] = `
<ContextProvider
  value={
    Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "subscription": Subscription {
        "handleChangeWrapper": [Function],
        "listeners": Object {
          "notify": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": null,
      },
    }
  }
>
  <Groups
    groups={Array []}
    isLoading={true}
    pagination={
      Object {
        "count": 1,
        "itemCount": 1,
        "limit": 50,
        "numberOfItems": 50,
        "offset": 0,
      }
    }
    userIdentity={Object {}}
  />
</ContextProvider>
`;
