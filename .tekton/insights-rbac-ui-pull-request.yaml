apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/RedHatInsights/insights-rbac-ui?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: event == "pull_request" && target_branch
      == "master"
    pipelinesascode.tekton.dev/pipeline: https://raw.githubusercontent.com/karelhala/konflux-pipelines/b1fb409f6f2537307559f435723b9c86dd3c46b6/pipelines/platform-ui/docker-build-run-unit-e2e-tests.yaml
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: insights-rbac-ui
    appstudio.openshift.io/component: insights-rbac-ui
    pipelines.appstudio.openshift.io/type: build
  name: insights-rbac-ui-on-pull-request
  namespace: rh-platform-experien-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  - name: output-image
    value: quay.io/redhat-user-workloads/rh-platform-experien-tenant/insights-rbac-ui/insights-rbac-ui:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: dockerfile
    value: ./build-tools/Dockerfile
  - name: unit-tests-script
    value: |
      #!/bin/bash
      set -ex

      npm install
      npm run lint
      NODE_OPTIONS="--max-old-space-size=1536" npm test -- --runInBand --no-cache --logHeapUsage --coverage=false
  - name: unit-tests-memory-request
    value: "8Gi"
  - name: unit-tests-memory-limit
    value: "8Gi"
  - name: e2e-script
    value: |
      #!/usr/bin/env bash
      set -ex
      npm install
      npm run start &
      until curl -k 'https://stage.foo.redhat.com:1337' > /dev/null 2>&1; do
        echo "Waiting for dev server to be ready"
        sleep 5
      done
      echo "Dev server ready!"
      NO_COLOR=1 E2E_USER=$CHROME_ACCOUNT E2E_PASSWORD=$CHROME_PASSWORD E2E_WORKSPACES_USER=$RBAC_USER E2E_WORKSPACES_PASSWORD=$RBAC_PASSWORD npm run cypress
  - name: secrets
    value: e2e-secrets
  pipelineRef:
    name: docker-build
  taskRunTemplate:
    serviceAccountName: build-pipeline-insights-rbac-ui
  workspaces:
  - name: workspace
    volumeClaimTemplate:
      metadata:
        creationTimestamp: null
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      status: {}
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}
