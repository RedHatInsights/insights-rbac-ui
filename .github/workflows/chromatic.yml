name: Chromatic Deployment

on:
  # Trigger on pushes to master
  push:
    branches:
      - master
  
  # Trigger on PRs to master - use pull_request_target for forks
  pull_request_target:
    branches:
      - master

# Add standard permissions for the workflow
permissions:
  contents: read
  pull-requests: read

jobs:
  # Job for push events to master
  chromatic-deployment-push:
    if: github.event_name == 'push'
    runs-on: ubuntu-24.04
    outputs:
      storybookUrl: ${{ steps.chromatic-deployment.outputs.storybookUrl }}
      buildUrl: ${{ steps.chromatic-deployment.outputs.buildUrl }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: './.github/actions/setup-environment'

      - name: Install dependencies
        run: npm ci

      - name: Build Storybook and deploy to Chromatic
        id: chromatic-deployment
        uses: chromaui/action@latest
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          buildScriptName: build-storybook
          exitZeroOnChanges: true

  # Test Storybook against deployed Chromatic build (for push events)
  test-storybook-push:
    if: github.event_name == 'push'
    runs-on: ubuntu-24.04
    needs: [chromatic-deployment-push]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: './.github/actions/setup-environment'

      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright
        run: npx playwright install --with-deps

      - name: Run Storybook tests
        run: npm run test-storybook:ci -- --url ${{ needs.chromatic-deployment-push.outputs.storybookUrl }}
        env:
          CI: true

  # Job to check if user has repository access (simpler approach)
  check-permissions:
    if: github.event_name == 'pull_request_target'
    runs-on: ubuntu-24.04
    outputs:
      has-access: ${{ steps.check-access.outputs.has-access }}
    steps:
      - name: Check repository access
        id: check-access
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            try {
              // Simple approach: check if user has write access to the repository
              // This works for organization members with appropriate permissions
              const { data: permission } = await github.rest.repos.getCollaboratorPermissionLevel({
                owner: context.repo.owner,
                repo: context.repo.repo,
                username: context.payload.pull_request.user.login
              });
              
              const hasAccess = ['write', 'admin', 'maintain'].includes(permission.permission);
              core.setOutput('has-access', hasAccess);
              
              if (hasAccess) {
                core.info(`User ${context.payload.pull_request.user.login} has ${permission.permission} access to the repository`);
              } else {
                core.info(`User ${context.payload.pull_request.user.login} has ${permission.permission} access - not sufficient for Chromatic deployment`);
              }
            } catch (error) {
              // If we can't check permissions, assume no access for security
              core.info(`Error checking permissions: ${error.message}`);
              core.setOutput('has-access', false);
            }

  # Job for PR events from users with repository access
  chromatic-deployment-pr:
    if: github.event_name == 'pull_request_target' && needs.check-permissions.outputs.has-access == 'true'
    runs-on: ubuntu-24.04
    needs: [check-permissions]
    outputs:
      storybookUrl: ${{ steps.chromatic-deployment.outputs.storybookUrl }}
      buildUrl: ${{ steps.chromatic-deployment.outputs.buildUrl }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # For pull_request_target, checkout the PR head
          ref: ${{ github.event.pull_request.head.sha }}
          # Fetch full history for Chromatic
          fetch-depth: 0

      - uses: './.github/actions/setup-environment'

      - name: Install dependencies
        run: npm ci

      - name: Build Storybook and deploy to Chromatic
        id: chromatic-deployment
        uses: chromaui/action@latest
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}
          buildScriptName: build-storybook
          exitZeroOnChanges: true

  # Test Storybook against deployed Chromatic build (for PR events)
  test-storybook-pr:
    runs-on: ubuntu-24.04
    needs: [chromatic-deployment-pr]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # For pull_request_target, checkout the PR head
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
          
      - uses: './.github/actions/setup-environment'

      - name: Install dependencies
        run: npm ci
        
      - name: Install Playwright
        run: npx playwright install --with-deps
        
      - name: Run Storybook tests
        run: npm run test-storybook:ci -- --url ${{ needs.chromatic-deployment-pr.outputs.storybookUrl }}
        env:
          CI: true
